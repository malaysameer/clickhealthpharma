/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (6.5.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.clickhealth.pharma.report.api;

import org.springframework.format.annotation.DateTimeFormat;
import java.time.LocalDate;
import com.clickhealth.pharma.report.model.PurchaseReportItem;
import com.clickhealth.pharma.report.model.SalesReportItem;
import com.clickhealth.pharma.report.model.StockReportItem;
import io.swagger.v3.oas.annotations.ExternalDocumentation;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import jakarta.validation.Valid;
import jakarta.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import jakarta.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2025-06-07T11:32:51.139951335+05:30[Asia/Kolkata]")
@Validated
@Tag(name = "reports", description = "the reports API")
public interface ReportsApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * GET /reports/purchases : Get purchase report
     *
     * @param from  (optional)
     * @param to  (optional)
     * @return Purchase report (status code 200)
     *         or Access token is missing or invalid (status code 401)
     */
    @Operation(
        operationId = "getPurchaseReport",
        summary = "Get purchase report",
        responses = {
            @ApiResponse(responseCode = "200", description = "Purchase report", content = {
                @Content(mediaType = "application/json", array = @ArraySchema(schema = @Schema(implementation = PurchaseReportItem.class)))
            }),
            @ApiResponse(responseCode = "401", description = "Access token is missing or invalid")
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/reports/purchases",
        produces = { "application/json" }
    )
    default ResponseEntity<List<PurchaseReportItem>> getPurchaseReport(
        @Parameter(name = "from", description = "", in = ParameterIn.QUERY) @Valid @RequestParam(value = "from", required = false) @DateTimeFormat(iso = DateTimeFormat.ISO.DATE) LocalDate from,
        @Parameter(name = "to", description = "", in = ParameterIn.QUERY) @Valid @RequestParam(value = "to", required = false) @DateTimeFormat(iso = DateTimeFormat.ISO.DATE) LocalDate to
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "[ { \"date\" : \"2000-01-23\", \"supplierName\" : \"supplierName\", \"totalAmount\" : 6.027456183070403, \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\", \"updatedBy\" : \"updatedBy\", \"createdBy\" : \"createdBy\", \"purchaseId\" : 0, \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\" }, { \"date\" : \"2000-01-23\", \"supplierName\" : \"supplierName\", \"totalAmount\" : 6.027456183070403, \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\", \"updatedBy\" : \"updatedBy\", \"createdBy\" : \"createdBy\", \"purchaseId\" : 0, \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\" } ]";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /reports/sales : Get sales report
     *
     * @param from  (optional)
     * @param to  (optional)
     * @return Sales report (status code 200)
     *         or Access token is missing or invalid (status code 401)
     */
    @Operation(
        operationId = "getSalesReport",
        summary = "Get sales report",
        responses = {
            @ApiResponse(responseCode = "200", description = "Sales report", content = {
                @Content(mediaType = "application/json", array = @ArraySchema(schema = @Schema(implementation = SalesReportItem.class)))
            }),
            @ApiResponse(responseCode = "401", description = "Access token is missing or invalid")
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/reports/sales",
        produces = { "application/json" }
    )
    default ResponseEntity<List<SalesReportItem>> getSalesReport(
        @Parameter(name = "from", description = "", in = ParameterIn.QUERY) @Valid @RequestParam(value = "from", required = false) @DateTimeFormat(iso = DateTimeFormat.ISO.DATE) LocalDate from,
        @Parameter(name = "to", description = "", in = ParameterIn.QUERY) @Valid @RequestParam(value = "to", required = false) @DateTimeFormat(iso = DateTimeFormat.ISO.DATE) LocalDate to
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "[ { \"date\" : \"2000-01-23\", \"totalAmount\" : 6.027456183070403, \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\", \"updatedBy\" : \"updatedBy\", \"createdBy\" : \"createdBy\", \"invoiceId\" : 0, \"customerName\" : \"customerName\", \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\" }, { \"date\" : \"2000-01-23\", \"totalAmount\" : 6.027456183070403, \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\", \"updatedBy\" : \"updatedBy\", \"createdBy\" : \"createdBy\", \"invoiceId\" : 0, \"customerName\" : \"customerName\", \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\" } ]";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /reports/stock : Get current stock levels
     *
     * @return Stock report (status code 200)
     *         or Access token is missing or invalid (status code 401)
     */
    @Operation(
        operationId = "getStockReport",
        summary = "Get current stock levels",
        responses = {
            @ApiResponse(responseCode = "200", description = "Stock report", content = {
                @Content(mediaType = "application/json", array = @ArraySchema(schema = @Schema(implementation = StockReportItem.class)))
            }),
            @ApiResponse(responseCode = "401", description = "Access token is missing or invalid")
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/reports/stock",
        produces = { "application/json" }
    )
    default ResponseEntity<List<StockReportItem>> getStockReport(
        
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "[ { \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\", \"quantity\" : 6, \"updatedBy\" : \"updatedBy\", \"createdBy\" : \"createdBy\", \"medicineId\" : 0, \"name\" : \"name\", \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\" }, { \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\", \"quantity\" : 6, \"updatedBy\" : \"updatedBy\", \"createdBy\" : \"createdBy\", \"medicineId\" : 0, \"name\" : \"name\", \"updatedAt\" : \"2000-01-23T04:56:07.000+00:00\" } ]";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
